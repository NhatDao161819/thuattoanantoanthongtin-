#include <stdio.h>
#include <math.h>
#include <stdbool.h>

#define MAX 1000000 

void sang(bool prime[]) {
    for (int i = 2; i <= sqrt(MAX); i++) {
        if (prime[i]) {
            for (int j = i * i; j <= MAX; j += i) {
                prime[j] = false; // Đánh dấu các bội số của i là không phải số nguyên tố
            }
        }
    }
}

bool isPrime(int num, bool prime[]) {
    if (num <= 1) return false; 
    if (num <= MAX) return prime[num]; 
    for (int i = 2; i <= sqrt(num); i++) {
        if (num % i == 0) return false; 
    }
    return true; // Nếu không chia hết cho số nào thì là số nguyên tố
}

int main() {
    int A, B, C;
    printf("Nhap A:");
    scanf("%d", &A);
    printf("Nhap B:");
    scanf("%d", &B);
    printf("Nhap C:");
    scanf("%d", &C);

    
    bool prime[MAX + 1];
    for (int i = 0; i <= MAX; i++) {
        prime[i] = true;
    }

    sang(prime);

    int x = 1;
    while (1) {
        int f = A * x * x + B * x + C; 
        if (isPrime(f, prime)) { // Kiểm tra xem f có phải là số nguyên tố không
            printf("(%d, %d,)", f, x); // In ra kết quả nếu tìm thấy số nguyên tố
            return 0;
        }
        x++; // Tăng x lên để kiểm tra số tiếp theo
    }

    return 0;
}
