#include<stdio.h>
#include<stdbool.h>
#include<math.h>

// Hàm tìm ước số chung lớn nhất (GCD)
int gcd(int a, int b) {
    int tmp;
    if (b > a) {
        tmp = a;
        a = b;
        b = tmp;
    }
    while (b > 0) {
        int r = a % b;
        a = b;
        b = r;
    }
    return a;
}

// Hàm sàng nguyên thủy (Sieve of Eratosthenes)
void sieveOfEratosthenes(int max, bool isPrime[]) {
    for (int i = 0; i <= max; i++) {
        isPrime[i] = true;
    }
    isPrime[0] = isPrime[1] = false; // 0 và 1 không phải là số nguyên tố

    for (int p = 2; p * p <= max; p++) {
        if (isPrime[p]) {
            for (int i = p * p; i <= max; i += p) {
                isPrime[i] = false;
            }
        }
    }
}

int main() {
    int a, b;

    // Nhập giá trị a và b từ người dùng với ràng buộc a >= 0 và b <= 1000
    do {
        printf("Nhap vao so a: ");
        scanf("%d", &a);
        printf("Nhap vao so b: ");
        scanf("%d", &b);
    } while (a < 0 || b > 1000);

    // Khởi tạo mảng đánh dấu số nguyên tố
    bool isPrime[1001];
    sieveOfEratosthenes(1000, isPrime);

    int d;
    printf("Cac cap so (A, B) thoa man dieu kien:\n");
    for (int i = a; i < b; i++) {
        for (int j = a; j < b; j++) {
            d = gcd(i, j);
            if (isPrime[d]) {
                printf("[%d, %d] %d\n", i, j, d);
            }
        }
    }

    return 0;
}
